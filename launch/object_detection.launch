<launch>
	<!-- camera driver node -->
	<!-- <include file="$(find usb_cam)/launch/usb_cam-test.launch"/> -->
	<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
		<param name="video_device" value="/dev/video0" />
		<param name="image_width" value="640" />
		<param name="image_height" value="480" />
		<param name="pixel_format" value="yuyv" />
		<param name="camera_frame_id" value="usb_cam" />
		<param name="io_method" value="mmap"/>
 	</node>
	<!-- Ar_alvar_tracker node -->
	<arg name="marker_size" default="4.4" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
	<arg name="cam_image_topic" default="/usb_cam/image_raw" />
	<arg name="cam_info_topic" default="/usb_cam/camera_info" />
	<arg name="output_frame" default="usb_cam" />

	<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />
		<remap from="camera_image"  to="$(arg cam_image_topic)" />
		<remap from="camera_info"   to="$(arg cam_info_topic)" />
	</node>	
	<!-- Static TF boradcaster                                                   target_frame x y z r p y -->
	<node pkg="ar_marker_detector" type="camera_static_tf.py" name="camera_static_tf" args="usb_cam 0.5 0 1.3 0 0 0">
	</node> 
	<!-- Single marker pose detection node -->
	<node pkg="ar_marker_detector" type="get_marker_pose.py" name="getmarker_pose">
	</node> 
	<!-- Double marker pose detection node -->
	<node pkg="ar_marker_detector" type="get_twomarker_pose.py" name="get_twomarker_pose">
	</node> 
	
</launch>
